- content_for :sidebar do
  = render partial: 'procurement/templates/filter_panel'

%h3
  %i.fa.fa-cube
  = _('Templates')

= form_tag nil, remote: true, id: "accordion" do

  - @categories.group_by(&:main_category).each_pair do |main_category, categories|
    .panel.panel-info
      .panel-heading.collapsed(data-toggle="collapse" href="#collapse_#{main_category.id}")
        %h4{data: {searchable: main_category.name.try(:downcase)}}
          %span.toggler
            %i.fa.fa-caret-right
          - if image = main_category.image
            %img.main_category_image{src: get_image_path(image.thumbnail.id)}
          - else
            %i.fa.fa-outdent.main_category_image
          = main_category.name

      .panel-body(id="collapse_#{main_category.id}" class="panel-collapse collapse" role="tabpanel")
        - categories.each do |category|
          .panel.panel-default
            .panel-heading{data: {searchable: category.name.try(:downcase)}}
              %i.fa.fa-outdent
              %b= category.name

            %table.table
              %thead
                %tr.row
                  %td.col-xs-3= _('Article or Project')
                  %td.col-xs-3= _('Article nr. or Producer nr.')
                  %td.col-xs-2= format('%s %s %s', _('Price'), MoneyRails.default_currency, _('incl. VAT'))
                  %td.col-xs-3= _('Supplier')
                  %td.col-xs-1
              %tbody
                - category.templates.each do |template|
                  %tr.row
                    %td.col-xs-3{data: {searchable: template.article_name.try(:downcase)}}
                      %input{type: :hidden, name: "categories[#{category.id}]templates_attributes[][id]", value: template.id}
                      %input{type: :hidden, name: "categories[#{category.id}]templates_attributes[][_destroy]"}
                      %input.form-control{name: "categories[#{category.id}]templates_attributes[][article_name]", placeholder: _('Article or Project'), value: template.article_name, required: true}
                    %td.col-xs-3{data: {searchable: template.article_number.try(:downcase)}}
                      %input.form-control{name: "categories[#{category.id}]templates_attributes[][article_number]", placeholder: _('Article nr. or Producer nr.'), value: template.article_number}
                    %td.col-xs-2
                      %input.form-control{name: "categories[#{category.id}]templates_attributes[][price]", type: :number, min: 0, value: template.price.to_i, placeholder: format('%s %s', _('Price'), _('incl. VAT')), autocomplete: :off}
                    %td.col-xs-3{data: {searchable: template.supplier_name.try(:downcase)}}
                      %input.form-control{name: "categories[#{category.id}]templates_attributes[][supplier_name]", placeholder: _('Supplier'), value: template.supplier_name}
                    %td.col-xs-1.text-right
                      %i.fa.fa-minus-circle{title: _("Delete line"), data: {toggle: 'tooltip'}}
                %tr.row.new_template
                  %td.col-xs-3
                    %input.form-control{name: "categories[#{category.id}]templates_attributes[][article_name]", placeholder: _('Article or Project')}
                  %td.col-xs-3
                    %input.form-control{name: "categories[#{category.id}]templates_attributes[][article_number]", placeholder: _('Article nr. or Producer nr.')}
                  %td.col-xs-2
                    %input.form-control{name: "categories[#{category.id}]templates_attributes[][price]", type: :number, min: 0, placeholder: format('%s %s', _('Price'), _('incl. VAT')), autocomplete: :off}
                  %td.col-xs-3
                    %input.form-control{name: "categories[#{category.id}]templates_attributes[][supplier_name]", placeholder: _('Supplier')}
                  %td.col-xs-1.text-right
                    %i.fa.fa-minus-circle{title: _("Delete line"), data: {toggle: 'tooltip'}}
              %tfoot
                %tr
                  %td.h3{colspan: 6}
                    %i.fa.fa-plus-circle{title: _('Add new article to category'), data: {toggle: 'tooltip'}}

  .row
    .col-xs-12
      = render partial: 'layouts/procurement/flash', :locals => {:flash => flash}
  .text-right
    %button.btn.btn-success{type: :submit}
      %i.fa.fa-check
      = _('Save')

:scss
  .new_template {
    display: none;
  }

:coffeescript
  $(document).ready ->
    initAutocompletes = ->
      $("input[name*='templates_attributes[][article_name]']").autocomplete
        minLength: 3
        source: ( request, response )->
          $.ajax
            url: "/procurement/models.json"
            dataType: "json"
            data:
              search_term: request.term
            success: ( data )->
              response( data )
        select: ( event, ui )->
          $(this).val( ui.item.name )
          false
      .each ->
        $(this).data('ui-autocomplete')._renderItem = ( ul, item )->
          $( "<li>" ).append( "<a>" + item.name + "</a>" ).appendTo( ul )

      $("input[name*='templates_attributes[][supplier_name]']").autocomplete
        minLength: 3
        source: ( request, response )->
          $.ajax
            url: '/procurement/suppliers.json'
            dataType: "json"
            data:
              search_term: request.term
            success: ( data )->
              response( data )
        select: ( event, ui )->
          $(this).val( ui.item.name )
          false
      .each ->
        $(this).data('ui-autocomplete')._renderItem = ( ul, item )->
          $( "<li>" ).append( "<a>" + item.name + "</a>" ).appendTo( ul )

    do initAutocompletes

    $('tfoot').on 'click', '.fa-plus-circle', ->
      target_el = $(this).closest('tfoot').prev('tbody').find('tr:last-child')
      cloned_el = target_el.clone()
      cloned_el.find('input').val('')
      cloned_el.insertBefore(target_el)
      cloned_el.show()
      do initAutocompletes
      false

    $('tbody').on 'click', '.fa-minus-circle', ->
      row_el = $(this).closest('tr')
      target_el = row_el.find("input[name*='[_destroy]']")
      if target_el.val() == '1'
        target_el.val('').change()
        row_el.removeClass('bg-danger')
      else
        target_el.val('1').change()
        row_el.addClass('bg-danger')
      false

    $('form').on('ajax:success', (e, data, status, xhr) ->
      location.reload()
    ).on 'ajax:error', (e, xhr, status, error) ->
      errors = ''
      for error in xhr.responseJSON
        errors += '<li>' + error + '</li>'
      $('.flash').html '<ul class="alert alert-danger" style="padding-left: 2em;">' + errors + '</ul>'

    $('form').on 'change', ->
      $('.flash').hide()

    $('.panel').on('click', '.panel-heading:not(.collapsed) input', (e)->
      e.stopPropagation()
    )
