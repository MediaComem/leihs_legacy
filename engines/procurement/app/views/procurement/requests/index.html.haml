:ruby
  is_editable = ((@budget_period.in_requesting_phase? and (@user == current_user or @category.inspectable_by?(current_user))) or
                 (@budget_period.in_inspection_phase? and @category.inspectable_by?(current_user)))

= form_tag nil, remote: true, multipart: true, class: 'form-horizontal' do
  .panel{class: "panel-#{header_color(@budget_period)}"}
    .panel-heading
      = render partial: 'procurement/budget_periods/header', locals: {budget_period: @budget_period, requests: @requests}
      - if is_editable
        .row
          .col-xs-12.text-right
            %button.btn.btn-success{type: :submit, disabled: true}
              %i.fa.fa-check
              = _('Save')

    .panel-body
      - if is_editable
        - content_for :sidebar do
          %h4
            %i.fa.fa-plus-circle
            %span.h5
              = _('New line (Add Article or Project)')
          %hr
          - if @category.templates.exists?
            %h4
              %i.fa.fa-cube
              = _('Choose an article/project')
            .list-group
              - @category.templates.each do |template|
                %a.list-group-item.show_template{href: '#', data: {template_id: template.id}}
                  = template
                  .label.label-custom.pull-right
                    = money_without_cents_and_with_symbol template.price

      - i = 0
      - @requests.each do |request|
        = render partial: 'request', locals: {request: request}

      - if is_editable
        - [@category].each do |template_category|
          - template_category.templates.where.not(id: @requests.map(&:template_id)).each do |template|
            - i += 1
            = render partial: 'template', locals: {template: template, i: i}

        - i += 1
        = render partial: 'new_request', locals: {i: i}

    .panel-footer
      - if is_editable
        .row
          .col-xs-12
            = render partial: 'layouts/procurement/flash', :locals => {:flash => flash}
        .row
          .col-xs-6{style: 'font-size: 2em'}
            -#%i.fa.fa-plus-circle
          .col-xs-6.text-right
            %button.btn.btn-success{type: :submit, disabled: true}
              %i.fa.fa-check
              = _('Save')

:scss
  .panel-body {
    padding-top: 0;
    & > .row.request {
      border-top: 1px solid #cccccc;
      padding-top: 0.5em;
      padding-bottom: 0.5em;
      &.delete {
        background: #f2dede;
      }
    }
    .form-group {
      min-height: 2.5em;
      vertical-align: middle;
    }
  }

  .form-horizontal .control-label {
    text-align: left;
  }

  label.col-xs-4.control-label:after {
    content: ':';
    margin-left: -0.2em;
  }

  .main_category {
    line-height: 2.5em;
    background-color: #e2e2e2;
  }

:coffeescript
  @zebra_rows = ->
    $('.panel-body > .row.request').css('background-color', 'white')
    $('.panel-body > .row.request:visible:even').css('background-color', '#e2e2e2')

  @scroll_to = (el)->
    $('html, body').animate({
      scrollTop: el.offset().top - 100
    }, 200)
    el.effect( "highlight" )

  @show_template = (template_id)->
    el = $(".row[data-template_id='" + template_id + "']")
    el.removeClass('hidden')
    do zebra_rows
    el.find('[data-to_be_required]').attr('required', 'true')
    el.find("input[name*='requested_quantity]']").val(1).change()
    scroll_to(el)

  @show_request = (request_id)->
    if request_id == 'new_request'
      #$('.panel-footer .fa-plus-circle').trigger('click')
      $('.sidebar-wrapper .fa-plus-circle').trigger('click')
    else
      el = $(".row[data-request_id='" + request_id + "']")
      scroll_to(el)

  $(document).ready ->
    do zebra_rows

    #$('.panel-footer').on 'click', '.fa-plus-circle', ->
    $('.sidebar-wrapper').on 'click', '.fa-plus-circle', ->
      #target_el = $(this).closest('tfoot').prev('tbody').find('tr:last-child')
      #cloned_el = target_el.clone()
      #cloned_el.find('input').val('')
      #cloned_el.insertAfter(target_el)
      #$(this).hide()
      el = $('.request[data-request_id="new_request"]')
      #el.find('[data-to_be_required]').attr('required', 'true')
      el.find("input:radio[name*='[priority]'][value='normal']").prop('checked', 'true')
      el.removeClass('hidden').closest('form').change()
      do zebra_rows
      scroll_to(el)
      false

    $('.request[data-request_id="new_request"] input:text').on 'keyup change', ->
      el = $(this).closest('.request')
      inputs = el.find('input:text')
      required_inputs = el.find('[data-to_be_required]')
      values = inputs.map(-> $.trim($(this).val()) ).get().join('')
      if values.length
        required_inputs.attr('required', 'true')
      else
        required_inputs.removeAttr('required')

    $('.request[data-request_id="new_request"] a[data-method="delete"]').on 'click', ->
      el = $(this).closest('.request')
      el.find('[data-to_be_required]').removeAttr('required')
      el.find('input:not(:radio):not(:checkbox)').val('')
      el.find('input:radio, input:checkbox').prop('checked', '')
      el.addClass('hidden').closest('form').change()
      #$('.panel-footer .fa-plus-circle').show()
      $('.sidebar-wrapper .fa-plus-circle').show()
      do zebra_rows
      false

    $('.request .btn-group a').on 'ajax:success', (e, data, status, xhr) ->
      $('.flash').hide()
      el = $(this).closest('.request')
      el.html data
      false

    $("input[name*='[approved_quantity]']").on 'change', ->
      parent_el = $(this).closest('.request')
      inspection_comment_el = parent_el.find("textarea[name*='[inspection_comment]']")
      order_quantity_el = parent_el.find("input[name*='[order_quantity]']")
      new_val = $(this).val()

      if (not order_quantity_el.val()) or Number(order_quantity_el.val()) > Number(new_val)
        order_quantity_el.val(new_val)

      requested_quantity_el = parent_el.find("input[name*='[requested_quantity]']")
      requested_quantity = if requested_quantity_el.length
                             requested_quantity_el.val()
                           else
                             parent_el.find('.requested_quantity').text()

      if Number(new_val) < Number(requested_quantity)
        inspection_comment_el.attr('required', 'true')
      else
        inspection_comment_el.removeAttr('required')

    $("input[name*='_quantity]'], input[name*='[price]']").on 'keyup change', ->
      order_quantity = $(this).closest('.request').find("input[name*='[order_quantity]']").val()
      approved_quantity = $(this).closest('.request').find("input[name*='[approved_quantity]']").val()
      requested_quantity = $(this).closest('.request').find("input[name*='[requested_quantity]']").val()
      quantity = order_quantity or approved_quantity or requested_quantity
      price_el = $(this).closest('.request').find("input[name*='[price]']")
      total = quantity * price_el.val()
      formatted_total = accounting.formatMoney(total, {symbol: 'CHF', format: "%s %v", precision: 0, thousand: "'"})
      $(this).closest('.request').find(".total_price").data('total', total).html(formatted_total)
      big_total = 0
      $(".total_price").each ->
        if Number($(this).data('total'))
          big_total += Number($(this).data('total'))
      formatted_big_total = accounting.formatMoney(big_total, {symbol: 'CHF', format: "%s %v", precision: 0, thousand: "'"})
      $(".big_total_price").html(formatted_big_total)

    $("input[name*='[article_name]']").on('keypress', ->
      $(this).closest('.form-group').find("input[name*='[model_id]']").val('')
    ).autocomplete
      minLength: 3
      source: ( request, response )->
        $.ajax
          url: "/procurement/models.json"
          dataType: "json"
          data:
            search_term: request.term
          success: ( data )->
            response( data )
      select: ( event, ui )->
        $(this).closest('.form-group').find("input[name*='[model_id]']").val( ui.item.id )
        $(this).val( ui.item.name ).change()
        false
    .each ->
      $(this).data('ui-autocomplete')._renderItem = ( ul, item )->
        $( "<li>" ).append( "<a>" + item.name + "</a>" ).appendTo( ul )

    $("input[name*='[supplier_name]']").on('keypress', ->
      $(this).closest('.form-group').find("input[name*='[supplier_id]']").val('')
    ).autocomplete
      minLength: 3
      source: ( request, response )->
        $.ajax
          url: '/procurement/suppliers.json'
          dataType: "json"
          data:
            search_term: request.term
          success: ( data )->
            response( data )
      select: ( event, ui )->
        $(this).closest('.form-group').find("input[name*='[supplier_id]']").val( ui.item.id )
        $(this).val( ui.item.name ).change()
        false
    .each ->
      $(this).data('ui-autocomplete')._renderItem = ( ul, item )->
        $( "<li>" ).append( "<a>" + item.name + "</a>" ).appendTo( ul )

    $("input[name*='[receiver]']").autocomplete
      minLength: 3
      source: ( request, response )->
        $.ajax
          url: '/procurement/users.json'
          dataType: "json"
          data:
            search_term: request.term
          success: ( data )->
            response( data )
            #response($.map data, (item)->
            #  {label: item.firstname + ' ' + item.lastname, value: item.id})
      select: ( event, ui )->
        $(this).val( ui.item.firstname + " " + ui.item.lastname ).change()
        false
    .each ->
      $(this).data('ui-autocomplete')._renderItem = ( ul, item )->
        $( "<li>" ).append( "<a>" + item.firstname + " " + item.lastname + "</a>" ).appendTo( ul )

    $("form button[type='submit']").on 'click', ->
      if $('form :invalid').length
        scroll_to $('form :invalid').first().closest('.request')
        false

    form_data_before_changes = $('form').serialize()

    $('form').on('change keyup', ->
      attachments = $("input[type='file']").map(-> $(this).val() ).get().join('')
      if form_data_before_changes != $('form').serialize() or attachments != ''
        $('.flash').hide()
        $("form button[type='submit']").removeAttr('disabled')
        window.onbeforeunload = -> return "#{_('You have unsaved data. Would you like to delete the data?')}"
      else
        $('.flash').show()
        $("form button[type='submit']").attr('disabled', 'true')
        window.onbeforeunload = null
    ).on('ajax:success', (e, data, status, xhr) ->
      window.onbeforeunload = null
      location.replace $(this).attr('action')
    ).on 'ajax:error', (e, xhr, status, error) ->
      errors = ''
      for error in xhr.responseJSON
        errors += '<li>' + error + '</li>'
      el = $(".flash")
      el.html('<ul class="alert alert-danger" style="padding-left: 2em;">' + errors + '</ul>').show()
      $('html, body').animate({
        scrollTop: el.offset().top - 100
      }, 200)

    $('form input').keypress (e)->
      charCode = e.charCode || e.keyCode || e.which
      if charCode  == 13
        return false

    $('.attachments a.delete').on 'click', ->
      li = $(this).closest('li')
      if li.find("input[name*='[attachments_delete]']").val() == '1'
        li.css('text-decoration', 'none').find("input[name*='[attachments_delete]']").val('')
      else
        li.css('text-decoration', 'line-through').find("input[name*='[attachments_delete]']").val('1')
      li.closest('form').change()
      false

    $("a.show_template").on 'click', ->
      show_template $(this).data('template_id')
      false

- if params[:template_id]
  :coffeescript
    $(document).ready ->
      show_template '#{params[:template_id]}'

- if params[:request_id]
  :coffeescript
    $(document).ready ->
      show_request '#{params[:request_id]}'
