- content_for :sidebar do
  = render partial: 'procurement/requests/filter_panel'

.well.well-sm{style: 'padding-left: 15px; padding-right: 15px;'}
  #column-titles.row
    %b.col-sm-2
      %a{href: '#', data: {sort_by: :article_name}}
        = _('Article or Project')
        %i.fa.fa-sort
    %b.col-sm-2
      %a{href: '#', data: {sort_by: :user}}
        = _('Requester')
        %i.fa.fa-sort
    %b.col-sm-2
      %a{href: '#', data: {sort_by: :department}}
        = _('Organisation')
        %i.fa.fa-sort
    %b.col-sm-1
      %a{href: '#', data: {sort_by: :price}}
        = format('%s %s', _('Price'), Setting.local_currency_string)
        %i.fa.fa-sort
    %b.col-sm-2
      %a{href: '#', data: {sort_by: :requested_quantity}}
        = _('Quantities')
        %i.fa.fa-sort
    %b.col-sm-1
      %a{href: '#', data: {sort_by: :total_price}}
        = format('%s %s', _('Total'), Setting.local_currency_string)
        %i.fa.fa-sort
    %b.col-sm-1
      %a{href: '#', data: {sort_by: :priority}}
        = _('Priority')
        %i.fa.fa-sort
    %b.col-sm-1
      %a{href: '#', data: {sort_by: :state}}
        = _('State')
        %i.fa.fa-sort

#filter_target.transparency
  .h1.text-center{style: 'margin: 1em;'}
    %i.fa.fa-circle-o-notch.spinner

:scss
  .main_category {
    .h4 {
      margin: 0;
    }
  }

  .budget_limit, .big_total_price {
    display: inline-block;
    margin: 0.7em 0 auto;
  }

  .panel-heading .col-sm-2.h1 {
    margin: 0;
  }

:coffeescript
  $(document).ready ->




    ###

    - mark numbers/sums as "dirty" if in same subcat/cat/period ('[data-shows_sum]')

    ###

    ###############################################################################

    currentEditForm = false
    $filterPanel = $('form#filter_panel')

    # prevent closing collapses if edit form is insideâ€¦
    $(window).on('hide.bs.collapse', (event) ->
      if currentEditForm && $.contains(event.target, currentEditForm[0])
        event.preventDefault()
        currentEditForm.trigger('highlight-editing-form')
    )

    $('#column-titles a').on('click', (event) ->
      # prevent re-sorting while editing
      if currentEditForm
        event.preventDefault()
        currentEditForm.trigger('highlight-editing-form')

      new_sort_by = $(this).data('sort_by')
      form = $('form#filter_panel')
      return false if form.hasClass('disabled')
      sort_by_el = form.find("input[name='filter[sort_by]']")
      sort_dir_el = form.find("input[name='filter[sort_dir]']")
      if sort_by_el.val() == new_sort_by and sort_dir_el.val() == 'asc'
        sort_dir_el.val('desc')
      else
        sort_dir_el.val('asc')
      sort_by_el.val(new_sort_by)
      form.change()
      false
    )

    markSumsAsDirty = ->
      $('[data-shows_sum]').each(->
        $(this)
          .tooltip('destroy')
          .css('color', 'transparent')
          .attr('title', 'Stale data, refresh browser to update')
          .tooltip()
      )

    $('#filter_target').delegate('[data-request_id][data-edit_url]', 'click', (event) ->
      $el = $(this)
      href = $el.data('edit_url')
      return console.error('No edit URL found!') unless href

      # if all is well, handle the click:
      event.preventDefault()

      # only 1 form can be openend at a time:
      if currentEditForm then return currentEditForm.trigger('highlight-editing-form')

      # prepare
      formHelper = App.RequestEditFormBehaviour
      $wrapper = $('<div class="padding-inset-m"/>')
      $status = $('<h3 class="text-center"><i class="fa fa-circle-o-notch spinner"></h3>')
      currentEditForm = $el
      formIsClosing = false
      # in case ajax goes wrong, we follow the original link:
      fallbackHref = $el.attr('href')


      # helpers
      closeInlineForm = ->
        return if formIsClosing
        formIsClosing = true
        $wrapper.slideUp(->
          $wrapper.remove()
          formIsClosing = false
        )
        $el.slideDown()
        currentEditForm = false
        window.onbeforeunload = null
        $filterPanel.removeClass('disabled')

      # direct: cancel button in form:
      handleDirectCancel = (event) ->
        event.preventDefault()
        unless currentEditForm.data?('hasChanged')
          closeInlineForm()
        else
          msg = formHelper.unsavedChangesConfirmation()
          window.confirm(msg) and closeInlineForm()

      highlightEditingForm = ->
        # NOTE: `once` neeed because animation callbacks can fire multiple times
        highlightOnce = _.once -> $wrapper.effect("highlight", 1000)
        navbarHeight = $('header nav').height()

        if inViewport($wrapper.find('form .cancel-button')[0])
          highlightOnce()
        else
          $('html, body').animate(
            { scrollTop: $wrapper.offset().top - (navbarHeight * 2) },
            200,
            highlightOnce # (on animation complete)
          )

      # setup
      currentEditForm.bind('highlight-editing-form', highlightEditingForm)
      $filterPanel.addClass('disabled')
      $status.hide()
      $wrapper.append($status)
      $el.after($wrapper)
      $el.slideUp()
      $status.slideDown()

      # fetch the form and show it inline:
      $.ajax(url: href)
        .done((data, textStatus, jqXHR) ->
          $form = $(data).hide()
          $wrapper.append($form)
          setupInlineForm($form)
          $status.slideUp()
          $form.slideDown()
          $form.addClass('in')
        )
        .fail((jqXHR, textStatus, errorThrown) ->
          console.error(jqXHR, textStatus, errorThrown)
          window.location.assign(fallbackHref)
        )

      setupInlineForm = ($form) ->
        formHelper.requireInspectionCommentIfQuantityDecreased()

        formHelper.autocompleteInputs()

        formHelper.disableSubmitOnEnter()

        formHelper.handleDeletingAttachments()

        formHelper.formChangeListener($form, {
          hasChanged: ()->
            currentEditForm.data('hasChanged', true)
            $form.find("button[type='submit']").removeAttr('disabled')
            window.onbeforeunload = formHelper.unsavedChangesConfirmation
          isSame: ()->
            currentEditForm.data('hasChanged', false)
            $form.find("button[type='submit']").attr('disabled', 'true')
            window.onbeforeunload = null
        })

        # handle form submitting
        $form.on('ajax:success', (e, data, status, xhr) ->
          # NOTE: dont use `data`!
          # the `remotipart` gem has to do weird workarounds,
          # which is only fixed for xhr.responseText
          $line = $(xhr.responseText)
          $line.hide()
          $el.replaceWith($line)
          $el = $line
          closeInlineForm()
          markSumsAsDirty()
        ).on('ajax:error', (e, xhr, status, error) ->
          errors = xhr.responseJSON || (try JSON.parse(xhr.responseText)) || [error || 'Internal Server Error']
          msg = if errors.length <= 1 then errors else errors.map(e -> "<li>\#{e}</li>")
          flash = $('<ul class="alert alert-danger" style="padding-left: 2em;">' + msg + '</ul>')
          $form.find('.alert').remove()
          $form.prepend(flash)
          currentEditForm.trigger('highlight-editing-form')
        )

        $form.delegate('.cancel-button', 'click', handleDirectCancel)
    )
