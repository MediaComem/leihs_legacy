%tbody

  - consecutive_number = 0
  - merged_item_names = []

  - @reservations.sort.each do |line|

    - inv_code = line.item.try(&:inventory_code)
    - next if not inv_code and merged_item_names.include?(line.model.name)

    - unless inv_code
      - merged_item_names.push line.model.name
      - merged_quantity = @reservations.select{|l| l.model.name == line.model.name and not l.item.try &:inventory_code}.count

    - quantity = merged_quantity || line.quantity

    %tr
      %td.consecutive_number
        - if quantity > 1
          = "%s/%s" % [consecutive_number += 1, consecutive_number += quantity - 1]
        - else
          = consecutive_number += 1
      %td.inventory_code= inv_code
      %td.model_name= line.model.name
      %td.end_date= l line.end_date
      %td.quantity= quantity
      %td.item_price= number_to_currency (merged_quantity || 1) * line.price_or_max_price, format: '%n %u', :unit => app_settings.local_currency_string
