#current-order-basket.margin-left-xxs
  .row
    %ul
      %li
        .navigation-tab-item.margin-right-xxs.padding-horizontal-m.float-left.active
          %i.fa.fa-shopping-cart
          %span.margin-top-s
            = _("Order")
          %span#timeout-countdown.hidden
            #timeout-countdown-refresh.button.white.micro.font-size-s.margin-left-s.negative-margin-right-s.negative-top-xxs
              #timeout-countdown-time

  .row.content-wrapper.straight-top-left.padding-top-xs

    #current-order-lines
      - if current_user.reservations.unsubmitted.empty?
        .padding-horizontal-s.padding-bottom-s.padding-top-xxs.margin-top-xxs
          .emboss.padding-inset-xs
            %p.paragraph-s
              %strong= _("Nothing selected")
      - else
        - Hash[current_user.reservations.unsubmitted.group_by{|l| l.model }.sort].each_pair do |model, reservations|
          .row.line.small{:title => model}
            .line-col.col1of1
              %span.text-ellipsis.width-s-alt.block= "#{reservations.sum(&:quantity)}x #{model}"

    #order-overview-button.padding-inset-xxs{class: current_user.reservations.unsubmitted.empty? ? "hidden" : ""}
      .row.padding-inset-s
        %a.button.green.min-width-full{href: borrow_current_order_path }= _("Complete order")

:coffeescript

  for reservation in #{current_user.reservations.unsubmitted.to_json}
    App.Reservation.addRecord new App.Reservation reservation

  for model in #{current_user.reservations.unsubmitted.map(&:model).to_json}
    App.Model.addRecord new App.Model model

  jQuery =>
    new App.BasketController
      el: $("#current-order-basket")
